version: 2.1
orbs:
  python: circleci/python@2.1.1

commands:
  sonarcloud-scan:
    description: Detect bugs and vulnerabilities
    parameters:
      cache_version:
        default: 1
        description: increment this value if the cache is corrupted and you want to start with a clean cache
        type: integer
      project_root:
        default: .
        description: the root of the project that should be analyzed (relative to the root directory of the repository)
        type: string
      sonar_token_variable_name:
        default: SONAR_TOKEN
        description: the name of the environment variable where the SonarCloud API token is stored
        type: env_var_name
    steps:
      - run:
          name: Create cache directory if it doesn't exist
          command: mkdir -p /tmp/cache/scanner
      - run:
          name: SonarCloud Scan
          command: |
            set -e
            VERSION=6.2.0.4584
            SONAR_TOKEN=$<<parameters.sonar_token_variable_name>>
            SCANNER_DIRECTORY=/tmp/cache/scanner
            export SONAR_USER_HOME=$SCANNER_DIRECTORY/.sonar
            OS="linux"
            ARCH="x64"
            echo $SONAR_USER_HOME

            if [[ ! -x "$SCANNER_DIRECTORY/sonar-scanner-$VERSION-$OS-$ARCH/bin/sonar-scanner" ]]; then
              curl -Ol https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-$VERSION-$OS-$ARCH.zip
              unzip -qq -o sonar-scanner-cli-$VERSION-$OS-$ARCH.zip -d $SCANNER_DIRECTORY

              chmod +x $SCANNER_DIRECTORY/sonar-scanner-$VERSION-$OS-$ARCH/bin/sonar-scanner
              chmod +x $SCANNER_DIRECTORY/sonar-scanner-$VERSION-$OS-$ARCH/jre/bin/java
            fi

            cd <<parameters.project_root>>
            $SCANNER_DIRECTORY/sonar-scanner-$VERSION-$OS-$ARCH/bin/sonar-scanner

jobs:
  build-test:
    executor:
      name: python/default
      tag: "3.12"
    resource_class: medium
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
          pypi-cache: false
      - run:
          name: Lint (flake8)
          command: flake8
          when: always
      - run:
          name: Lint (mypy)
          command: mypy --strict .
          when: always
      - run:
          name: Test
          command: |
            coverage run
            coverage xml
            coverage report
          when: always
      - sonarcloud-scan

workflows:
  cicd:
    jobs:
      - build-test
